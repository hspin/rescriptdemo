import {
  _1,
  _2
} from "./chunk-QGZR7VXY.js";
import {
  some,
  valFromOption
} from "./chunk-Q6ZKLBXQ.js";
import "./chunk-Y2F7D3TJ.js";

// ../node_modules/.pnpm/@rescript+core@0.6.0_rescript@11.0.1/node_modules/@rescript/core/src/Core__Option.bs.js
function filter(opt, p) {
  if (opt !== void 0 && _1(p, valFromOption(opt))) {
    return opt;
  }
}
function forEach(opt, f) {
  if (opt !== void 0) {
    return _1(f, valFromOption(opt));
  }
}
function getExn(x) {
  if (x !== void 0) {
    return valFromOption(x);
  }
  throw {
    RE_EXN_ID: "Not_found",
    Error: new Error()
  };
}
function mapOr(opt, $$default, f) {
  if (opt !== void 0) {
    return _1(f, valFromOption(opt));
  } else {
    return $$default;
  }
}
function map(opt, f) {
  if (opt !== void 0) {
    return some(_1(f, valFromOption(opt)));
  }
}
function flatMap(opt, f) {
  if (opt !== void 0) {
    return _1(f, valFromOption(opt));
  }
}
function getOr(opt, $$default) {
  if (opt !== void 0) {
    return valFromOption(opt);
  } else {
    return $$default;
  }
}
function orElse(opt, other) {
  if (opt !== void 0) {
    return opt;
  } else {
    return other;
  }
}
function isSome(x) {
  return x !== void 0;
}
function isNone(x) {
  return x === void 0;
}
function equal(a, b, eq) {
  if (a !== void 0) {
    if (b !== void 0) {
      return _2(eq, valFromOption(a), valFromOption(b));
    } else {
      return false;
    }
  } else {
    return b === void 0;
  }
}
function compare(a, b, cmp) {
  if (a !== void 0) {
    if (b !== void 0) {
      return _2(cmp, valFromOption(a), valFromOption(b));
    } else {
      return 1;
    }
  } else if (b !== void 0) {
    return -1;
  } else {
    return 0;
  }
}
var mapWithDefault = mapOr;
var getWithDefault = getOr;
export {
  compare,
  equal,
  filter,
  flatMap,
  forEach,
  getExn,
  getOr,
  getWithDefault,
  isNone,
  isSome,
  map,
  mapOr,
  mapWithDefault,
  orElse
};
//# sourceMappingURL=@rescript_core_src_Core__Option__bs__js.js.map
